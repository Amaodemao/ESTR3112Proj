import matplotlib.pyplot as plt
import numpy as np

# Correcting the calculation for averaging the losses per epoch
sgd_losses = [
    2.2485860819220544, 2.04671613278985, 1.8822560358345508, 1.787830593943596, 
    1.6981919761002064, 1.6494034841060639, 1.585216694444418, 1.5704593427777291, 
    1.5278392874002458, 1.5027340840250254, 1.4831307274475694, 1.4682015165835618, 
    1.4507574728131294, 1.4241071706265211, 1.416575517691672, 1.4253548259288074, 
    1.397504855260253, 1.3872498880550266, 1.3605457486361265, 1.3532348960638045, 
    1.328965467236936, 1.3473928329497575, 1.3329056254699827, 1.3144829191341996, 
    1.287490578532219, 1.2935100430026651, 1.2601351333931088, 1.2820216069445014, 
    1.2755979092791676, 1.2567516842260957, 1.2676452470943331, 1.2135879182629288, 
    1.2155010149888694, 1.2015750864073633, 1.2373909163065255, 1.1962241203561426, 
    1.184749284632504, 1.164741977788508, 1.184616709049791, 1.1756606466602535, 
    1.1773229861147703, 1.180910481914878, 1.150742284834385, 1.151496038030833, 
    1.132430873055011, 1.1471795444525779, 1.137068248860538, 1.1256421727985144, 
    1.1224379352573306, 1.1090801197215914, 1.115358610291034, 1.0695418615918606, 
    1.1097769113741816, 1.118559472816065, 1.0881494083236902, 1.0871277966219932, 
    1.1018575093895198, 1.069524209683761, 1.0649201476573944, 1.0576317863054574
]
# There are 10 epochs with 6 data points each, so we reshape the array to (10, 6) and compute the mean across the rows
sgd_losses = np.array(sgd_losses).reshape(10, 6).mean(axis=1)

sgd_momentum_losses = [
    1.9231798072755337, 1.6391910438537598, 1.5317237587198616, 1.505929836049676, 
    1.4260644688010216, 1.4015464148372412, 1.3616359883099793, 1.3266270611286164, 
    1.3218041383326053, 1.290479987964034, 1.2878780140839516, 1.2614865428321063, 
    1.2203156360387801, 1.2147645667549223, 1.2033491810709238, 1.17093396377936, 
    1.1815596331767737, 1.177868212427944, 1.1183677748367191, 1.1260040410868823, 
    1.0995186118278653, 1.0981919732391834, 1.1110564507506788, 1.1232272456400096, 
    1.0269170039761812, 1.0492584395909217, 1.028254089702852, 1.057322445550002, 
    1.0680645859930664, 1.0716709541562013, 0.9698604782740585, 0.9674953974736854, 
    0.9923311126935296, 1.0182124614596832, 1.0119642262086272, 1.0278127233609557, 
    0.9165635165907443, 0.9420034740213304, 0.9458950727870687, 0.971611134570092, 
    0.9803984212116338, 0.979415400438942, 0.8905538276790176, 0.910961194944568, 
    0.917579167379532, 0.9135434680674225, 0.9206069299149094, 0.9682198378611356, 
    0.8448241000362905, 0.8797326260441914, 0.9029572767956415, 0.8833034878077451, 
    0.9079635116192513, 0.9082094466872513, 0.7977248495219974, 0.8397379153487272, 
    0.8501120879305527, 0.8815709940276575, 0.8855411207943689, 0.9013866216288879
]
# Reshaping the list into a 10x6 array and calculating the mean for each epoch
sgd_momentum_losses = np.array(sgd_momentum_losses).reshape(10, 6).mean(axis=1)

adam_losses = [
    1.7965730669498443, 1.5669937309026718, 1.4929620173498988, 1.4471427414733917, 
    1.3929509652629495, 1.3615989416129888, 1.2953351741582155, 1.2710896868435666, 
    1.2759371368959547, 1.2515955038294195, 1.2512543485462666, 1.213457192208618, 
    1.158009430469945, 1.1662339439094067, 1.1655684189647437, 1.153806097947061, 
    1.160221448400058, 1.1587904912251978, 1.0721409551724792, 1.0913270871788263, 
    1.103345004040748, 1.1053707799231633, 1.1067666999958456, 1.0851431263107807, 
    1.0264448678689078, 1.030277715404518, 1.0511828574177344, 1.0543932345137, 
    1.04810708801914, 1.0678989780037664, 0.9896843213154934, 0.9940023106141016, 
    1.0107334278915077, 1.00836658128025, 1.018402587370947, 1.021601519768883, 
    0.9373213641223846, 0.970894402994134, 0.9587499920122791, 0.9877299249686766, 
    0.9878311001230031, 0.9761065941876732, 0.8954686649864306, 0.9108949233007152, 
    0.966615257421392, 0.9610991894619074, 0.9710776438442991, 0.9616666468526237, 
    0.8813976015183144, 0.9038066791771562, 0.9168846244452871, 0.9178541162562905, 
    0.9546497396663762, 0.9416458047006745, 0.8635773777568247, 0.8871401203916175, 
    0.883366314410523, 0.8974604116380215, 0.9085863006828877, 0.9467389890033518
]
# Reshaping the list into a 10x6 array and calculating the mean for each epoch
adam_losses = np.array(adam_losses).reshape(10, 6).mean(axis=1)

rmsprop_losses = [
    1.784295477926731, 1.575819861859083, 1.4849908601641655, 1.4514393920227886, 
    1.3840506433770061, 1.3681006241068243, 1.305006961837411, 1.3155704519962892, 
    1.2782066068649292, 1.2770638776160776, 1.260558226488065, 1.2813246068283914, 
    1.2150518545601516, 1.2247707106908783, 1.2017013195576147, 1.2143184286803008, 
    1.2295637807841413, 1.2521523173972964, 1.1519269767766818, 1.1756246831677855, 
    1.1596636855229736, 1.1737911031339316, 1.2024920313563199, 1.2079637617766856, 
    1.1627099705999717, 1.1434350274689495, 1.1727527902768924, 1.1999175475884694, 
    1.1356482361694797, 1.1737918636705726, 1.1110089911525138, 1.1159642630321904, 
    1.13955916316621, 1.1513818782051093, 1.1677000429336912, 1.1441137554263696, 
    1.0837859126803233, 1.1097765427981503, 1.1150442564705154, 1.156602096802555, 
    1.1273776511512696, 1.1280868897566105, 1.1020591114852578, 1.1216453979364596, 
    1.1042745160211926, 1.1185745002804324, 1.1043478384185583, 1.1194207312436775, 
    1.0756652452195994, 1.0788498799381778, 1.0959707689238711, 1.0947558675177862, 
    1.0942420261328807, 1.133956239271909, 1.1051713383719326, 1.0803826156477443, 
    1.0893081748131663, 1.1158115458727116, 1.1010171071151271, 1.1039247116455808
]
# Reshaping the list into a 10x6 array and calculating the mean for each epoch
rmsprop_losses = np.array(rmsprop_losses).reshape(10, 6).mean(axis=1)

adagrad_losses = [
    2.1090058096051214, 1.9555812389850618, 1.879887600570917, 1.8559669164419175, 
    1.8047477647960186, 1.7905351105332374, 1.7662357632219792, 1.742198957592249, 
    1.7496449539065362, 1.7119685615301132, 1.728772441536188, 1.704548066943884, 
    1.7026306430250406, 1.6755122801959514, 1.6804605101048946, 1.6665567052960395, 
    1.6646908544749022, 1.6723519624173642, 1.6539175413250924, 1.6282713447213173, 
    1.652304539322853, 1.6451806530952453, 1.6334192598760129, 1.6286937356591225, 
    1.619568350225687, 1.6195227552354337, 1.6139462948441505, 1.6230479072034358, 
    1.5947540285289288, 1.6051521523594856, 1.5890139667391776, 1.5870730059444904, 
    1.5879361555576323, 1.594492111325264, 1.5894302909523248, 1.5993304578512908, 
    1.5743132531493902, 1.5783644448816776, 1.5742389110922814, 1.583752538010478, 
    1.561925853997469, 1.568844990476966, 1.570079184561968, 1.5560773920714854, 
    1.568883533284068, 1.566532096132636, 1.535579776495695, 1.5487103815078735, 
    1.5584516135007143, 1.5490051329880954, 1.5374280097037554, 1.5311758375614881, 
    1.5536284701526164, 1.5484428277164697, 1.5350435010194778, 1.5484051368534566, 
    1.525564691528678, 1.5313190828561782, 1.5307541691064834, 1.527079532623291
]
# Reshaping the list into a 10x6 array and calculating the mean for each epoch
adagrad_losses = np.array(adagrad_losses).reshape(10, 6).mean(axis=1)


epochs = np.arange(1, 11)  # 10 epochs

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(epochs, sgd_losses, label='SGD', marker='o')
plt.plot(epochs, sgd_momentum_losses, label='SGD with Momentum', marker='o')
plt.plot(epochs, adam_losses, label='Adam', marker='o')
plt.plot(epochs, rmsprop_losses, label='RMSprop', marker='o')
plt.plot(epochs, adagrad_losses, label='Adagrad', marker='o')

plt.title('Training Loss over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Average Loss')
plt.xticks(epochs)
plt.legend()
plt.grid(True)
plt.show()